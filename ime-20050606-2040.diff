? ime-20050606-2040.diff
? extras/Mesa/mms-config
? lib/winime
? programs/Xserver/hw/xwin/IMdkit
? programs/Xserver/hw/xwin/winic.c
? programs/Xserver/hw/xwin/winic.h
? programs/Xserver/hw/xwin/winime.c
? programs/Xserver/hw/xwin/winimserver.c
Index: config/cf/X11.tmpl
===================================================================
RCS file: /cvs/xorg/xc/config/cf/X11.tmpl,v
retrieving revision 1.49
diff -u -r1.49 X11.tmpl
--- config/cf/X11.tmpl	28 Apr 2005 22:55:46 -0000	1.49
+++ config/cf/X11.tmpl	6 Jun 2005 11:40:12 -0000
@@ -717,6 +717,10 @@
 #define BuildWindowsWMLibrary	NO
 #endif
 
+#ifndef BuildWinIMELibrary
+#define BuildWinIMELibrary	NO
+#endif
+
 #ifndef BuildMiscDocs
 #define BuildMiscDocs		NO
 #endif
@@ -2345,6 +2349,30 @@
 #define ProfileLibWindowsWM	NO
 #endif
 
+#if BuildWinIMELibrary
+#ifndef SharedLibWinIME
+#define SharedLibWinIME		HasSharedLibraries
+#endif
+#ifndef NormalLibWinIME
+#define NormalLibWinIME		(!SharedLibWinIME || ForceNormalLib)
+#endif
+#ifndef DebugLibWinIME
+#define DebugLibWinIME		NO
+#endif
+#ifndef ProfileLibWinIME
+#define ProfileLibWinIME	NO
+#endif
+#else
+#undef  SharedLibWinIME
+#define SharedLibWinIME		NO
+#undef  NormalLibWinIME
+#define NormalLibWinIME		NO
+#undef  DebugLibWinIME
+#define DebugLibWinIME		NO
+#undef  ProfileLibWinIME
+#define ProfileLibWinIME	NO
+#endif
+
 #if BuildGLULibrary
 #ifndef SharedLibGlu
 #define SharedLibGlu		HasSharedLibraries
@@ -2747,6 +2775,16 @@
 ProjectUnsharedLibReferences(WINDOWSWM,WindowsWM,$(WINDOWSWMLIBSRC),XBuildLibDir)
 #endif
 
+   WINIMELIBSRC = $(LIBSRC)/winime
+#if SharedLibWinIME
+#ifndef SharedWinIMERev
+#define SharedWinIMERev 1.0
+#endif
+SharedLibReferences(WINIME,WinIME,$(WINIMELIBSRC),SOWINIMEREV,SharedWinIMERev)
+#else
+ProjectUnsharedLibReferences(WINIME,WinIME,$(WINIMELIBSRC),XBuildLibDir)
+#endif
+
 # ifndef SharedLibXfontcache
 #  define SharedLibXfontcache	HasSharedLibraries
 # endif
Index: config/cf/cygwin.cf
===================================================================
RCS file: /cvs/xorg/xc/config/cf/cygwin.cf,v
retrieving revision 1.17
diff -u -r1.17 cygwin.cf
--- config/cf/cygwin.cf	15 Nov 2004 15:06:52 -0000	1.17
+++ config/cf/cygwin.cf	6 Jun 2005 11:40:12 -0000
@@ -67,7 +67,7 @@
 #endif
 
 #if !CrossCompiling
-# define HasGcc2		YES
+/*# define HasGcc2		YES*/
 #endif /* !CrossCompiling */
 #define HasGcc2ForCplusplus	YES
 #define GccUsesGas		YES
@@ -306,6 +306,9 @@
 #ifndef BuildXWinXF86Config
 # define BuildXWinXF86Config	NO
 #endif
+#ifndef BuildXWinImServer
+# define BuildXWinImServer     YES
+#endif
 
 /* XWin specific build flags - 1st order dependency */
 #if BuildXWinMultiWindowExtWM && !defined(BuildWindowsWMLibrary)
@@ -314,6 +317,10 @@
 # define BuildWindowsWMLibrary	NO
 #endif /* BuildXWinMultiWindowExtWM && BuildWindowsWMLibrary */
 
+#if !defined(BuildWinIMELibrary)
+# define BuildWinIMELibrary	YES
+#endif
+
 /* XWin Server specific defines */
 #if BuildXWinClipboard
 # define XWinClipboardDefines	-DXWIN_CLIPBOARD
@@ -356,6 +363,16 @@
 #else
 # define XWinXF86ConfigDefines 
 #endif /* BuildXWinXF86Config */
+#if BuildWinIMELibrary
+# define XWinWinIMEDefines	-DXWIN_WINIME
+#else
+# define XWinWinIMEDefines
+#endif /* BuildXWinIMELibrary */
+#if BuildXWinImServer
+# define XWinImServerDefines	-DXWIN_IMSERVER
+#else
+# define XWinImServerDefines
+#endif /* BuildXWinImServer */
 
 /*
  * XFree86Server is defined for the w32api headers, which protects some
@@ -371,6 +388,7 @@
 				XWinUpdateStatsDefines \
 				XWinClipboardDefines XWinMultiWindowDefines \
 				XWinMultiWindowExtWMDefines \
+				XWinWinIMEDefines XWinImServerDefines \
 				-DDDXBEFORERESET
 #define ServerOSDefines		-DDDXTIME -DDDXOSINIT \
 				-DDDXOSVERRORF -DDDXOSFATALERROR
Index: config/cf/cygwin.rules
===================================================================
RCS file: /cvs/xorg/xc/config/cf/cygwin.rules,v
retrieving revision 1.10
diff -u -r1.10 cygwin.rules
--- config/cf/cygwin.rules	19 May 2005 18:53:42 -0000	1.10
+++ config/cf/cygwin.rules	6 Jun 2005 11:40:12 -0000
@@ -29,6 +29,7 @@
 #define SharedLibDpsTk		YES
 #define SharedLibGlu		YES
 #define SharedLibWindowsWM	NO
+#define SharedLibWinIME		NO
 #ifndef SharedDataSeparation
 #define SharedDataSeparation	NO
 #endif
Index: config/cf/mingw.cf
===================================================================
RCS file: /cvs/xorg/xc/config/cf/mingw.cf,v
retrieving revision 1.8
diff -u -r1.8 mingw.cf
--- config/cf/mingw.cf	1 Jun 2005 15:48:48 -0000	1.8
+++ config/cf/mingw.cf	6 Jun 2005 11:40:13 -0000
@@ -379,6 +379,10 @@
 # define BuildWindowsWMLibrary	NO
 #endif /* BuildXWinMultiWindowExtWM && BuildWindowsWMLibrary */
 
+#if !defined(BuildWinIMELibrary)
+# define BuildWinIMELibrary	YES
+#endif
+
 #if (BuildXWinClipboard || BuildXWinMultiWindow || BuildXWinMultiWindowExtWM) && !defined(BuildX11Lib)
 #  define BuildX11Lib YES
 #endif
Index: lib/Imakefile
===================================================================
RCS file: /cvs/xorg/xc/lib/Imakefile,v
retrieving revision 1.11
diff -u -r1.11 Imakefile
--- lib/Imakefile	29 Sep 2004 12:40:28 -0000	1.11
+++ lib/Imakefile	6 Jun 2005 11:40:30 -0000
@@ -161,6 +161,10 @@
 WINDOWSLIBDIR = windows
 #endif
 
+#if BuildWinIMELibrary
+WINIMELIBDIR = winime
+#endif
+
 XF86EXTLIBS = $(XF86MISCLIBDIR) $(XF86VMLIBDIR) \
 		$(XF86DGALIBDIR) $(XF86RUSHLIBDIR)
 
@@ -236,7 +240,8 @@
              $(FONTCONFIGBUILDDIR) $(XFT1LIBDIR) \
 	     $(XFTLIBDIR) $(XVMCLIBDIR) $(RANDRLIBDIR) $(XTRAPLIBDIR) \
 	     $(XRESLIBDIR) $(XCURSORLIBDIR) $(APPLELIBDIR) $(DMXLIBDIR) \
-	     $(WINDOWSLIBDIR) $(XEVIELIBDIR) $(XFIXESLIBDIR) $(DAMAGELIBDIR) $(COMPOSITELIBDIR)
+	     $(WINDOWSLIBDIR) $(XEVIELIBDIR) $(XFIXESLIBDIR) $(DAMAGELIBDIR) $(COMPOSITELIBDIR) \
+	     $(WINIMELIBDIR)
 
 SUBDIRS = $(BERKDIR) xtrans $(LINTSUBDIRS) $(FONTSUBDIR) $(FONTENCSUBDIR) \
           $(FONTCACHELIBDIR)
Index: programs/Xserver/Imakefile
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/Imakefile,v
retrieving revision 1.31
diff -u -r1.31 Imakefile
--- programs/Xserver/Imakefile	22 Apr 2005 20:49:49 -0000	1.31
+++ programs/Xserver/Imakefile	6 Jun 2005 11:40:38 -0000
@@ -1005,13 +1005,31 @@
 #else
 XWINOPENGLLIB = 
 #endif
+#if BuildWinIMELibrary
+XWINIMMLIB = -limm32
+#else
+XWINIMMLIB =
+#endif
+#if BuildXWinImServer
+XWINIMDKITDIR = $(XWINDDXDIR)/IMdkit
+XWINIMDKITLIB = $(XWINDDXDIR)/IMdkit/LibraryTargetName(Ximd)
+XWINWINIMELIB = -lWinIME -lXext
+#else
+XWINIMDKITDIR =
+XWINIMDKITLIB =
+XWINWINIMELIB =
+#endif
 
 XWINLIB = $(XWINDDXDIR)/LibraryTargetName(XWin)
 XWINDIRS = $(STDDIRS) $(FBDIR) $(SHADOWDIR) $(LAYERDIR) $(XWINDDXDIR) \
-	   $(DEPDIRS) $(XWINPARSERDIR) $(ROOTLESSDIR) $(MIDAMAGEDIR)
+	   $(DEPDIRS) $(XWINPARSERDIR) $(ROOTLESSDIR) $(MIDAMAGEDIR) \
+	   $(XWINIMDKITDIR)
+
 XWINOBJS = $(XWINDDXDIR)/stubs.o $(XWINDDXDIR)/XWin.res
 XWINLIBS = PreFbLibs $(XWINLIB) FbPostFbLibs $(XWINLIB) $(XWINLAYERLIB) \
-           $(SHADOW) $(XWINPARSERLIB) $(ROOTLESSLIB) $(OS)
+           $(SHADOW) $(XWINPARSERLIB) $(ROOTLESSLIB) $(OS) $(XWINIMMLIB) \
+	   $(XWINIMDKITLIB)
+
 #if BuildXWinMultiWindow || BuildXWinClipboard
 XWINX11  = $(XONLYLIB)	   
 # if defined(Win32Architecture)
@@ -1026,12 +1044,15 @@
 #else
 XWINW32  = -lgdi32
 #endif
-XWINSYSLIBS = $(FONTLIBS) $(LDPRELIBS) $(XWINX11) $(SYSLIBS) $(XWINW32)
+XWINSYSLIBS = $(FONTLIBS) $(LDPRELIBS) $(XWINWINIMELIB) $(XWINX11) \
+	      $(SYSLIBS) $(XWINW32) $(XWINIMDKITLIB)
+
 
 EXTRA_LDOPTIONS = -e _mainCRTStartup
 
 #if HasParallelMake
-MakeMutex($(XWINDIRS) $(XWINOBJS) $(XWINLIB) $(XWINLIBS) $(XWINSYSLIBS))
+MakeMutex($(XWINDIRS) $(XWINOBJS) $(XWINLIB) $(XWINLIBS) $(XWINSYSLIBS) \
+          $(XWINIMDKITLIB)))
 #endif
 
 #if ForceServerRemake
Index: programs/Xserver/hw/xwin/Imakefile
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/Imakefile,v
retrieving revision 1.8
diff -u -r1.8 Imakefile
--- programs/Xserver/hw/xwin/Imakefile	6 Jan 2005 16:02:47 -0000	1.8
+++ programs/Xserver/hw/xwin/Imakefile	6 Jun 2005 11:40:56 -0000
@@ -2,6 +2,10 @@
 
 #include <Server.tmpl>
 
+#if BuildXWinImServer
+# define IHaveSubdirs
+#endif
+
 EXTRADEFINES = 
 
 #if HasShm
@@ -12,7 +16,7 @@
 MMAPDEF = -DHAS_MMAP
 #endif
 
-#if defined(HasDevWindow) && HasDevWindows
+#if defined(HasDevWindows) && HasDevWindows
 EXTRADEFINES += -DHAS_DEVWINDOWS
 #endif
 
@@ -35,6 +39,10 @@
 RC_PROJECT_DEFINES = -DPROJECT_NAME="\\\"$(PROJECT_NAME)\\\""
 EXTRA_DEFINES = $(PROJECT_DEFINES)
 
+#if BuildXWinImServer
+SUBDIRS = IMdkit
+#endif
+
 #if BuildXWinClipboard
 SRCS_CLIPBOARD = \
 	winclipboardinit.c \
@@ -67,6 +75,13 @@
 	winwindowswm.c
 #endif
 
+#if BuildXWinImServer
+SRCS_WINIMEWM = \
+	winime.c \
+	winic.c \
+	winimserver.c
+#endif
+
 #if BuildXWinNativeGDI
 SRCS_NATIVEGDI = \
 	winclip.c \
@@ -137,6 +152,7 @@
 	$(SRCS_GLX_WINDOWS) \
 	$(SRCS_MULTIWINDOW) \
 	$(SRCS_MULTIWINDOWEXTWM) \
+	$(SRCS_WINIME) \
 	$(SRCS_NATIVEGDI) \
 	$(SRCS_PRIMARYFB) \
 	$(SRCS_RANDR) \
@@ -187,6 +203,13 @@
 	winwindowswm.o
 #endif
 
+#if BuildXWinImServer
+OBJS_WINIME = \
+	winime.o \
+	winic.o \
+	winimserver.o
+#endif
+
 #if BuildXWinNativeGDI
 OBJS_NATIVEGDI = \
 	winclip.o \
@@ -257,6 +280,7 @@
 	$(OBJS_GLX_WINDOWS) \
 	$(OBJS_MULTIWINDOW) \
 	$(OBJS_MULTIWINDOWEXTWM) \
+	$(OBJS_WINIME) \
 	$(OBJS_NATIVEGDI) \
 	$(OBJS_PRIMARYFB) \
 	$(OBJS_RANDR) \
@@ -270,7 +294,7 @@
 	   -I$(SERVERSRC)/include -I$(SERVERSRC)/os  \
            -I$(EXTINCSRC) -I$(XINCLUDESRC) \
 	   -I$(SERVERSRC)/render -I$(SERVERSRC)/randr \
-	   -I$(WINDOWSWMLIBSRC)
+	   -I$(WINDOWSWMLIBSRC) -I$(WINIMELIBSRC)
 
 #ifdef XVendorString
 VENDORSTRING = XVendorString
@@ -308,3 +332,6 @@
 InstallManPage(XWinrc,$(MANDIR))
 
 DependTarget()
+
+MakeSubdirs($(SUBDIRS))
+DependSubdirs($(SUBDIRS))
Index: programs/Xserver/hw/xwin/win.h
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/win.h,v
retrieving revision 1.15
diff -u -r1.15 win.h
--- programs/Xserver/hw/xwin/win.h	25 May 2005 12:14:29 -0000	1.15
+++ programs/Xserver/hw/xwin/win.h	6 Jun 2005 11:40:56 -0000
@@ -1327,6 +1327,9 @@
 winWindowProc (HWND hWnd, UINT message, 
 	       WPARAM wParam, LPARAM lParam);
 
+void
+winProcessMessage (LPMSG lpMsg);
+
 
 #ifdef XWIN_MULTIWINDOWEXTWM
 /*
@@ -1458,6 +1461,40 @@
 Bool
 winInitCursor (ScreenPtr pScreen);
 
+
+#ifdef XWIN_IMSERVER
+/*
+ * winime.c
+ */
+
+void
+winWinIMEExtensionInit ();
+
+void
+winWinIMESendEvent (int type, unsigned int mask, int kind, int arg, int context);
+
+int
+winHIMCtoContext (DWORD hIMC);
+
+void
+winCommitCompositionResult (int nContext, int nIndex, void *pData, int nLen);
+
+Bool
+winHIMCCompositionDraw(DWORD hIMC);
+
+LRESULT
+winIMEMessageHandler (HWND hwnd, UINT message,
+		      WPARAM wParam, LPARAM lParam);
+
+
+/*
+ * winimserver.c
+ */
+
+Bool
+winInitImServer ();
+#endif
+
 /*
  * END DDX and DIX Function Prototypes
  */
Index: programs/Xserver/hw/xwin/winblock.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winblock.c,v
retrieving revision 1.7
diff -u -r1.7 winblock.c
--- programs/Xserver/hw/xwin/winblock.c	3 Jun 2005 08:12:22 -0000	1.7
+++ programs/Xserver/hw/xwin/winblock.c	6 Jun 2005 11:40:56 -0000
@@ -39,6 +39,7 @@
 extern HWND			g_hDlgDepthChange;
 extern HWND			g_hDlgExit;
 extern HWND			g_hDlgAbout;
+extern Bool			g_fIME;
 
 
 /* See Porting Layer Definition - p. 6 */
@@ -97,7 +98,7 @@
 	  && (g_hDlgAbout == 0
 	      || !IsDialogMessage (g_hDlgAbout, &msg)))
 	{
-	  DispatchMessage (&msg);
+	  winProcessMessage(&msg);
 	}
     }
 }
Index: programs/Xserver/hw/xwin/winconfig.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winconfig.c,v
retrieving revision 1.11
diff -u -r1.11 winconfig.c
--- programs/Xserver/hw/xwin/winconfig.c	20 Apr 2005 12:25:42 -0000	1.11
+++ programs/Xserver/hw/xwin/winconfig.c	6 Jun 2005 11:40:56 -0000
@@ -39,6 +39,16 @@
 #include <X11/extensions/XKBsrv.h>
 #endif
 
+
+/*
+ * References to external symbols
+ */
+
+#ifdef XWIN_IMSERVER
+extern Bool			g_fIME;
+#endif
+
+
 #ifdef XWIN_XF86CONFIG
 #ifndef CONFIGPATH
 #define CONFIGPATH  "%A," "%R," \
@@ -296,7 +306,11 @@
 	   Same might apply for chinese, korean and other symbol languages
 	   too */
         layoutNum = (layoutNum & 0xffff);
-	if (keyboardType == 7)
+	if ((keyboardType == 7)
+#ifdef XWIN_IMSERVER
+	    && !g_fIME
+#endif
+	    )
 	  {
 	    /* Japanese layouts have problems with key event messages
 	       such as the lack of WM_KEYUP for Caps Lock key.
Index: programs/Xserver/hw/xwin/winglobals.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winglobals.c,v
retrieving revision 1.5
diff -u -r1.5 winglobals.c
--- programs/Xserver/hw/xwin/winglobals.c	22 Nov 2004 14:12:33 -0000	1.5
+++ programs/Xserver/hw/xwin/winglobals.c	6 Jun 2005 11:40:56 -0000
@@ -114,6 +114,15 @@
 #endif
 
 
+#ifdef XWIN_IMSERVER
+/*
+ * IME variables
+ */
+
+Bool			g_fIME = FALSE;
+#endif
+
+
 /*
  * Re-initialize global variables that are invalidated
  * by a server reset.
Index: programs/Xserver/hw/xwin/winmultiwindowwindow.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winmultiwindowwindow.c,v
retrieving revision 1.12
diff -u -r1.12 winmultiwindowwindow.c
--- programs/Xserver/hw/xwin/winmultiwindowwindow.c	7 Mar 2005 22:26:59 -0000	1.12
+++ programs/Xserver/hw/xwin/winmultiwindowwindow.c	6 Jun 2005 11:40:56 -0000
@@ -656,7 +656,7 @@
     {
       if (g_hDlgDepthChange == 0 || !IsDialogMessage (g_hDlgDepthChange, &msg))
 	{
-	  DispatchMessage (&msg);
+	  winProcessMessage(&msg);
 	}
     }
 
Index: programs/Xserver/hw/xwin/winmultiwindowwndproc.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winmultiwindowwndproc.c,v
retrieving revision 1.13
diff -u -r1.13 winmultiwindowwndproc.c
--- programs/Xserver/hw/xwin/winmultiwindowwndproc.c	3 Jun 2005 08:12:22 -0000	1.13
+++ programs/Xserver/hw/xwin/winmultiwindowwndproc.c	6 Jun 2005 11:40:57 -0000
@@ -36,6 +36,15 @@
 #include "winmultiwindowclass.h"
 #include "winprefs.h"
 #include "winmsg.h"
+#if CYGDEBUG
+#include "winmessages.h"
+#endif
+#ifdef XWIN_IMSERVER
+#define _WINIME_SERVER_
+#include "winime.h"
+#include "winimestr.h"
+#include <imm.h>
+#endif
 
 /*
  * External global variables
@@ -284,6 +293,39 @@
 
 
 /*
+ *
+ */
+
+char*
+WideToUTF8(int iUnicodeSize, wchar_t *pwszUnicodeStr, int *pLen)
+{
+  char			*pszUTF8 = NULL;
+
+  /* Convert to UTF8 */
+  *pLen = WideCharToMultiByte (CP_UTF8,
+			       0,
+			       (LPCWSTR)pwszUnicodeStr,
+			       iUnicodeSize/2,
+			       NULL,
+			       0,
+			       NULL,
+			       NULL);
+  pszUTF8 = (char *) malloc (*pLen+1);
+  WideCharToMultiByte (CP_UTF8,
+		       0,
+		       (LPCWSTR)pwszUnicodeStr,
+		       iUnicodeSize/2,
+		       pszUTF8,
+		       *pLen,
+		       NULL,
+		       NULL);
+  pszUTF8[*pLen] = '\0';
+
+  return pszUTF8;
+}
+
+
+/*
  * winTopLevelWindowProc - Window procedure for all top-level Windows windows.
  */
 
@@ -385,6 +427,11 @@
 	       WIN_WID_PROP,
 	       (HANDLE)winGetWindowID (((LPCREATESTRUCT) lParam)->lpCreateParams));
 
+#ifdef XWIN_IMSERVER
+      /* Disable IME by default */
+      ImmAssociateContext (hwnd, (HIMC) NULL);
+#endif
+
       /*
        * Make X windows' Z orders sync with Windows windows because
        * there can be AlwaysOnTop windows overlapped on the window
@@ -664,6 +711,13 @@
     case WM_SYSKEYDOWN:
     case WM_KEYDOWN:
 
+#ifdef XWIN_IMSERVER
+      /*
+       * Ignore IME process key
+       */
+      if (wParam == VK_PROCESSKEY) return 0;
+#endif
+
       /*
        * Don't pass Alt-F4 key combo to root window,
        * let Windows translate to WM_CLOSE and close this top-level window.
@@ -724,6 +778,13 @@
     case WM_KEYUP:
 
 
+#ifdef XWIN_IMSERVER
+      /*
+       * Ignore IME process key
+       */
+      if (wParam == VK_PROCESSKEY) return 0;
+#endif
+
       /* Pass the message to the root window */
       SendMessage (hwndScreen, message, wParam, lParam);
       return 0;
@@ -1019,6 +1080,16 @@
 	}
       break;
 
+#ifdef XWIN_IMSERVER
+    case WM_IME_NOTIFY:
+    case WM_IME_STARTCOMPOSITION:
+    case WM_IME_COMPOSITION:
+    case WM_IME_ENDCOMPOSITION:
+    case WM_IME_CHAR:
+    case WM_CHAR:
+      return winIMEMessageHandler (hwnd, message, wParam, lParam);
+#endif
+
     default:
       break;
     }
Index: programs/Xserver/hw/xwin/winprocarg.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winprocarg.c,v
retrieving revision 1.10
diff -u -r1.10 winprocarg.c
--- programs/Xserver/hw/xwin/winprocarg.c	15 Dec 2004 12:22:39 -0000	1.10
+++ programs/Xserver/hw/xwin/winprocarg.c	6 Jun 2005 11:41:00 -0000
@@ -54,6 +54,9 @@
 extern Bool			g_fNoHelpMessageBox;                     
 extern Bool			g_fSoftwareCursor;
 extern Bool			g_fSilentDupError;
+#ifdef XWIN_IMSERVER
+extern Bool			g_fIME;
+#endif
 
 /* globals required by callback function for monitor information */
 struct GetMonitorInfoData {
@@ -1259,6 +1262,17 @@
       return 1;
     }
 
+#ifdef XWIN_IMSERVER
+  /*
+   * Look for the '-ime' argument
+   */
+  if (IS_OPTION ("-ime"))
+    {
+      g_fIME = TRUE;
+      return 1;
+    }
+#endif
+
   /*
    * Look for the '-fp' argument
    */
Index: programs/Xserver/hw/xwin/winscrinit.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winscrinit.c,v
retrieving revision 1.9
diff -u -r1.9 winscrinit.c
--- programs/Xserver/hw/xwin/winscrinit.c	12 Feb 2005 14:47:17 -0000	1.9
+++ programs/Xserver/hw/xwin/winscrinit.c	6 Jun 2005 11:41:00 -0000
@@ -75,6 +75,9 @@
 extern miPointerScreenFuncRec	g_winPointerCursorFuncs;
 extern int			g_iScreenPrivateIndex;
 extern Bool                     g_fSoftwareCursor;
+#ifdef XWIN_IMSERVER
+extern Bool			g_fIME;
+#endif
 
 
 /*
@@ -467,6 +470,20 @@
     }
 #endif
 
+#ifdef XWIN_IMSERVER
+  if (g_fIME)
+    {
+      winWinIMEExtensionInit ();
+
+      /* Initialize XIM server */
+      if (!winInitImServer())
+	{
+	  ErrorF ("winFinishScreenInitFB - winInitImServer () failed.\n");
+	  return FALSE;
+	}
+    }
+#endif
+
   /* Handle rootless mode */
   if (pScreenInfo->fRootless)
     {
Index: programs/Xserver/hw/xwin/winwakeup.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winwakeup.c,v
retrieving revision 1.4
diff -u -r1.4 winwakeup.c
--- programs/Xserver/hw/xwin/winwakeup.c	15 Nov 2004 15:06:48 -0000	1.4
+++ programs/Xserver/hw/xwin/winwakeup.c	6 Jun 2005 11:41:00 -0000
@@ -63,7 +63,7 @@
 	  && (g_hDlgAbout == 0
 	      || !IsDialogMessage (g_hDlgAbout, &msg)))
 	{
-	  DispatchMessage (&msg);
+	  winProcessMessage(&msg);
 	}
     }
 }
Index: programs/Xserver/hw/xwin/winwin32rootlesswndproc.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winwin32rootlesswndproc.c,v
retrieving revision 1.8
diff -u -r1.8 winwin32rootlesswndproc.c
--- programs/Xserver/hw/xwin/winwin32rootlesswndproc.c	20 Apr 2005 12:25:42 -0000	1.8
+++ programs/Xserver/hw/xwin/winwin32rootlesswndproc.c	6 Jun 2005 11:41:00 -0000
@@ -38,6 +38,15 @@
 #include <X11/Xatom.h>
 #include "winmultiwindowclass.h"
 #include "winmsg.h"
+#if CYGDEBUG
+#include "winmessages.h"
+#endif
+#ifdef XWIN_IMSERVER
+#define _WINIME_SERVER_
+#include "winime.h"
+#include "winimestr.h"
+#include <imm.h>
+#endif
 
 
 /*
@@ -456,6 +465,11 @@
       SetProp (hwnd,
 	       WIN_WINDOW_PROP,
 	       (HANDLE)((LPCREATESTRUCT) lParam)->lpCreateParams);
+
+#ifdef XWIN_IMSERVER
+      /* Disable IME by default */
+      ImmAssociateContext (hwnd, (HIMC) NULL);
+#endif
       return 0;
 
     case WM_CLOSE:
@@ -735,6 +749,13 @@
       winDebug ("winMWExtWMWindowProc - WM_*KEYDOWN\n");
 #endif
 
+#ifdef XWIN_IMSERVER
+      /*
+       * Ignore IME process key
+       */
+      if (wParam == VK_PROCESSKEY) return 0;
+#endif
+
       /*
        * Don't pass Alt-F4 key combo to root window,
        * let Windows translate to WM_CLOSE and close this top-level window.
@@ -763,6 +784,13 @@
       winDebug ("winMWExtWMWindowProc - WM_*KEYUP\n");
 #endif
 
+#ifdef XWIN_IMSERVER
+      /*
+       * Ignore IME process key
+       */
+      if (wParam == VK_PROCESSKEY) return 0;
+#endif
+
       /* Pass the message to the root window */
       SendMessage (hwndScreen, message, wParam, lParam);
       return 0;
@@ -1313,6 +1341,16 @@
       ErrorF ("winMWExtWMWindowProc - WM_UNMANAGE\n");
       break;
 
+#ifdef XWIN_IMSERVER
+    case WM_IME_NOTIFY:
+    case WM_IME_STARTCOMPOSITION:
+    case WM_IME_COMPOSITION:
+    case WM_IME_ENDCOMPOSITION:
+    case WM_IME_CHAR:
+    case WM_CHAR:
+      return winIMEMessageHandler (hwnd, message, wParam, lParam);
+#endif
+
     default:
       break;
     }
Index: programs/Xserver/hw/xwin/winwindowswm.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winwindowswm.c,v
retrieving revision 1.2
diff -u -r1.2 winwindowswm.c
--- programs/Xserver/hw/xwin/winwindowswm.c	21 Jun 2004 13:19:32 -0000	1.2
+++ programs/Xserver/hw/xwin/winwindowswm.c	6 Jun 2005 11:41:00 -0000
@@ -240,7 +240,7 @@
        */
       if (!pHead)
 	{
-	  pHead = (WMEventPtr *) xalloc (sizeof (WMEventPtr));
+	  pHead = (WMEventPtr *) xalloc (sizeof (WMEventRec));
 	  if (!pHead ||
 	      !AddResource (eventResource, EventType, (pointer)pHead))
 	    {
Index: programs/Xserver/hw/xwin/winwndproc.c
===================================================================
RCS file: /cvs/xorg/xc/programs/Xserver/hw/xwin/winwndproc.c,v
retrieving revision 1.10
diff -u -r1.10 winwndproc.c
--- programs/Xserver/hw/xwin/winwndproc.c	31 Jan 2005 10:43:37 -0000	1.10
+++ programs/Xserver/hw/xwin/winwndproc.c	6 Jun 2005 11:41:01 -0000
@@ -56,6 +56,7 @@
 extern HWND			g_hwndKeyboardFocus;
 extern Bool			g_fSoftwareCursor;
 extern DWORD			g_dwCurrentThreadID;
+extern Bool			g_fIME;
 
 
 /*
@@ -1247,3 +1248,29 @@
 
   return DefWindowProc (hwnd, message, wParam, lParam);
 }
+
+void
+winProcessMessage (LPMSG lpMsg)
+{
+#if 0
+  if (lpMsg->message == WM_KEYUP || lpMsg->message == WM_KEYDOWN)
+    {
+      winDebug("winProcessMessage %d\n", GetTickCount());
+      winDebug("msg:0x%02x wParam:0x%04x time:%d", lpMsg->message, lpMsg->wParam, lpMsg->time);
+      winDebug("lParam:count(0x%04x) scancode(0x%02x) flag(0x%x,0x%x,0x%x,0x%x)\n",
+	       LOWORD (lpMsg->lParam),
+	       LOBYTE (HIWORD (lpMsg->lParam)),
+	       (HIBYTE (HIWORD (lpMsg->lParam)) & 0x01) >> 0,
+	       (HIBYTE (HIWORD (lpMsg->lParam)) & 0x20) >> 5,
+	       (HIBYTE (HIWORD (lpMsg->lParam)) & 0x40) >> 6,
+	       (HIBYTE (HIWORD (lpMsg->lParam)) & 0x80) >> 7);
+    }
+#endif
+#ifdef XWIN_IMSERVER
+  if (g_fIME)
+    {
+      TranslateMessage(lpMsg);
+    }
+#endif
+  DispatchMessage (lpMsg);
+}
